{"version":3,"sources":["components/Pages/Location/Current/Current.module.scss","components/Pages/Advice/CityInformation/CityInformation.module.scss","components/Pages/Advice/CityInformation/Statistic/Statistic.module.scss","components/Input/Text/Text.module.scss","components/Input/Button/Button.module.scss","components/Pages/Location/Preferred/Preferred.module.scss","components/Input/City/City.module.scss","components/Pages/Advice/Advice.module.scss","components/App/App.module.scss","components/Input/Button/index.tsx","components/Pages/index.tsx","components/Pages/Home/index.tsx","components/Input/Text/index.tsx","components/Pages/Name/index.tsx","lib/stringtools.ts","services/locations.ts","components/Input/City/index.tsx","components/Pages/Location/Current/index.tsx","components/Pages/Location/Preferred/index.tsx","components/Pages/Advice/CityInformation/Statistic/index.tsx","services/flights.ts","components/Pages/Advice/CityInformation/index.tsx","components/Pages/Advice/index.tsx","components/App/index.tsx","index.tsx","components/Pages/Page.module.scss"],"names":["module","exports","Button","props","className","classes","button","onClick","type","text","Page","page","page__header","page__title","title","description","page__description","content","page__content","link","page__actions","to","pathname","url","state","Home","TextInput","input__label","htmlFor","label","input","name","onChange","e","target","value","placeholder","Name","useState","setName","charAt","toUpperCase","slice","UppercaseFirstLetter","getLocationByString","a","fetch","data","json","getLocationByCoords","position","coords","latitude","longitude","CityInput","isLoading","setIsLoading","suggestions","setSuggestions","onSuggestionsFetchRequested","locations","inputProps","_event","newValue","styles","dropdown","dropdown__label","getSuggestionValue","suggestion","onSuggestionsClearRequested","renderSuggestion","country","theme","container","dropdown__container","dropdown__input","inputOpen","inputFocused","suggestionsContainer","suggestionsContainerOpen","suggestionsList","dropdown__suggestion","suggestionHighlighted","dropdown__status","CurrentLocation","location","setLocation","current","navigator","geolocation","getCurrentPosition","then","response","current__divider","currentLocation","current__welcome","aria-label","current__hello","role","PreferredLocation","setLocations","preferred","inputs","index","push","key","toString","tmp","onChangeLocation","multipleCityInput","preferredLocations","Statistic","statistic","statistic__label","statistic__value","getCheapestFlight","from","date","dateFrom","getUTCDate","getUTCMonth","getUTCFullYear","dateTo","CityInformation","flightInformation","setFlightInformation","useEffect","city","code","Date","flights","length","cityinformation","cityinformation__preferred","conversion","EUR","fly_duration","deep_link","cityinformation__flightlink","href","rel","population","toLocaleString","airports","bus_stations","stations","hotels","Advice","cityInformation","setCityInformation","information","map","cityName","Promise","all","fetchCityInformation","advice","App","component","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43806938.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"Current_current__1K4yY\",\"current__divider\":\"Current_current__divider__15GjJ\",\"current__welcome\":\"Current_current__welcome__1JYx9\",\"current__hello\":\"Current_current__hello__1PEn0\",\"wave-animation\":\"Current_wave-animation__caDCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cityinformation\":\"CityInformation_cityinformation__3PQWs\",\"cityinformation__preferred\":\"CityInformation_cityinformation__preferred__3opwX\",\"cityinformation__flightlink\":\"CityInformation_cityinformation__flightlink__1zEuc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic__label\":\"Statistic_statistic__label__28stt\",\"statistic__value\":\"Statistic_statistic__value__n0EPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Text_input__3PrXf\",\"input__label\":\"Text_input__label__3w2Bh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__32Xhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preferred\":\"Preferred_preferred__GEJ2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"City_dropdown__kt4QW\",\"dropdown__label\":\"City_dropdown__label__3eDJu\",\"dropdown__status\":\"City_dropdown__status__1a64f\",\"dropdown__container\":\"City_dropdown__container__ijxvL\",\"dropdown__input\":\"City_dropdown__input__1ybjR\",\"dropdown__input--focused\":\"City_dropdown__input--focused__35oq4\",\"dropdown__input--open\":\"City_dropdown__input--open__3isuI\",\"dropdown__suggestions-container\":\"City_dropdown__suggestions-container__1jpXE\",\"dropdown__suggestions-container--open\":\"City_dropdown__suggestions-container--open__fJ9xy\",\"dropdown__suggestions-list\":\"City_dropdown__suggestions-list__2aWUq\",\"dropdown__suggestion\":\"City_dropdown__suggestion__3n0VJ\",\"dropdown__suggestion--highlighted\":\"City_dropdown__suggestion--highlighted__Nw1Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"advice\":\"Advice_advice__3ROJg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2mBMi\"};","import React from 'react';\nimport classes from './Button.module.scss';\n\ninterface Props {\n  text: string;\n  onClick?: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\nexport const Button = (props: Props) => (\n  <button className={classes.button} onClick={props.onClick} type='button'>\n    {props.text}\n  </button>\n);\n","import React, { ReactNode } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '../Input/Button';\n\nimport classes from './Page.module.scss';\n\ninterface Props {\n  title: ReactNode;\n  description?: string;\n  content?: ReactNode;\n  link?: {\n    url: string;\n    text: string;\n    state?: any;\n  };\n}\n\nexport const Page = (props: Props) => (\n  <div className={classes.page}>\n    <div className={classes.page__header}>\n      <div className={classes.page__title}>{props.title}</div>\n      {props.description ? (\n        <p className={classes.page__description}>{props.description}</p>\n      ) : null}\n    </div>\n\n    {props.content ? <div className={classes.page__content}>{props.content}</div> : null}\n\n    {props.link ? (\n      <div className={classes.page__actions}>\n        <Link to={{ pathname: props.link.url, state: props.link.state }}>\n          <Button text={props.link.text} />\n        </Link>\n      </div>\n    ) : null}\n  </div>\n);\n","import React from 'react';\nimport { Page } from '..';\n\nexport const Home = () => (\n  <Page\n    description='Let us help you decide which city you should relocate to by giving you insight into the current weather, flight costs and city information.'\n    link={{ url: '/name', text: 'Start' }}\n    title='Relocata'\n  />\n);\n","import React from 'react';\nimport classes from './Text.module.scss';\n\ninterface Props {\n  label: string;\n  placeholder: string;\n  onChange: (newValue: string) => void;\n}\n\nexport const TextInput = (props: Props) => {\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(e.target.value);\n  };\n\n  return (\n    <div>\n      <label className={classes.input__label} htmlFor='input'>\n        {props.label}:\n      </label>\n      <input\n        className={classes.input}\n        name='input'\n        onChange={onChange}\n        placeholder={props.placeholder}\n        type='text'\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { TextInput } from '../../Input/Text';\nimport { Page } from '..';\nimport { UppercaseFirstLetter } from '../../../lib/stringtools';\n\nexport const Name = () => {\n  const [name, setName] = useState('');\n\n  const onChangeName = (input: string) => {\n    setName(UppercaseFirstLetter(input));\n  };\n\n  const content = (\n    <TextInput label='Name' onChange={onChangeName} placeholder='First name' />\n  );\n\n  return (\n    <Page\n      content={content}\n      link={{ url: '/current-location', text: 'Continue', state: { name } }}\n      title='What is your name?'\n    />\n  );\n};\n","export const UppercaseFirstLetter = (input: string) =>\n  input.charAt(0).toUpperCase() + input.slice(1);\n","export const getLocationByString = async (\n  input: string,\n): Promise<{ locations: KiwiLocation[] }> => {\n  const data = await fetch(\n    `https://api.skypicker.com/locations?term=${input}&locale=en-US&location_types=city&limit=5&active_only=true&sort=name`,\n  );\n\n  return data.json();\n};\n\nexport const getLocationByCoords = async (\n  position: Position,\n): Promise<{ locations: KiwiLocation[] }> => {\n  const data = await fetch(\n    `https://api.skypicker.com/locations?type=radius&lat=${position.coords.latitude}&lon=${position.coords.longitude}&radius=10&locale=en-US&location_types=city&limit=5&active_only=true&sort=rank`,\n  );\n\n  return data.json();\n};\n","import Autosuggest from 'react-autosuggest';\nimport React, { useState } from 'react';\n\nimport styles from './City.module.scss';\nimport { getLocationByString } from '../../../services/locations';\n\ninterface Props {\n  label?: string;\n  placeholder: string;\n  value: string;\n  onChange: (newValue: string) => void;\n}\n\nexport const CityInput = (props: Props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [suggestions, setSuggestions] = useState([] as KiwiLocation[]);\n\n  // Called when input is changed\n  const onChangeInput = (_event: any, { newValue }: any) => {\n    props.onChange(newValue);\n  };\n\n  // Called by autosuggest whenever new suggestions should be fetched\n  const onSuggestionsFetchRequested = async ({ value }: any) => {\n    setIsLoading(true);\n    const { locations } = await getLocationByString(value);\n    setSuggestions(locations);\n    setIsLoading(false);\n  };\n\n  // Called by autosuggest when suggestions should be cleared\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  // When suggestion is clicked, Autosuggest needs to populate the input\n  // based on the clicked suggestion. This function tells Autosuggest\n  // how to calculate the input value for every given suggestion.\n  const getSuggestionValue = (suggestion: KiwiLocation) => suggestion.name;\n\n  // Custom rendering of suggestions\n  const renderSuggestion = (suggestion: KiwiLocation) => (\n    <div>\n      {suggestion.name}, {suggestion.country.name}\n    </div>\n  );\n\n  const inputProps = {\n    placeholder: props.placeholder,\n    value: props.value,\n    onChange: onChangeInput,\n  };\n\n  return (\n    <div className={styles.dropdown}>\n      {props.label ? (\n        <label className={styles.dropdown__label}>{props.label}:</label>\n      ) : null}\n      <Autosuggest\n        getSuggestionValue={getSuggestionValue}\n        inputProps={inputProps}\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n        renderSuggestion={renderSuggestion}\n        suggestions={suggestions}\n        theme={{\n          container: styles.dropdown__container,\n          input: styles.dropdown__input,\n          inputOpen: styles['dropdown__input--open'],\n          inputFocused: styles['dropdown__input--focused'],\n          suggestionsContainer: styles['dropdown__suggestions-container'],\n          suggestionsContainerOpen: styles['dropdown__suggestions-container--open'],\n          suggestionsList: styles['dropdown__suggestions-list'],\n          suggestion: styles.dropdown__suggestion,\n          suggestionHighlighted: styles['dropdown__suggestion--highlighted'],\n        }}\n      />\n      {isLoading ? (\n        <span className={styles.dropdown__status}>Loading...</span>\n      ) : (\n        <span className={styles.dropdown__status} />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Location } from 'history';\n\nimport classes from './Current.module.scss';\nimport { Page } from '../..';\nimport { CityInput } from '../../../Input/City';\nimport { Button } from '../../../Input/Button';\nimport { getLocationByCoords } from '../../../../services/locations';\n\ninterface Props {\n  location: Location<{ name: string }>;\n}\n\nexport const CurrentLocation = (props: Props) => {\n  const { name } = props.location.state;\n\n  const [location, setLocation] = useState('');\n\n  const onChangeLocation = (input: string) => {\n    setLocation(input);\n  };\n\n  const content = (\n    <div className={classes.current}>\n      <Button\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          navigator.geolocation.getCurrentPosition((position) => {\n            getLocationByCoords(position).then((response) => {\n              setLocation(response.locations[0].name);\n            });\n          });\n        }}\n        text='Get current location'\n      />\n      <span className={classes.current__divider}>Or</span>\n      <CityInput\n        label='Search for location'\n        onChange={onChangeLocation}\n        placeholder='Type a city name'\n        value={location}\n      />\n    </div>\n  );\n\n  return (\n    <Page\n      content={content}\n      link={{\n        url: '/preferred-location',\n        text: 'Continue',\n        state: { currentLocation: location, ...props.location.state },\n      }}\n      title={\n        <>\n          <span className={classes.current__welcome}>\n            <span aria-label='hello' className={classes.current__hello} role='img'>\n              👋\n            </span>{' '}\n            Hi {name}!\n          </span>\n          <br />\n          <br />\n          What is your current location?\n        </>\n      }\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { Location } from 'history';\n\nimport classes from './Preferred.module.scss';\nimport { Page } from '../..';\nimport { CityInput } from '../../../Input/City';\n\ninterface Props {\n  location: Location<{ name: string; currentLocation: string }>;\n}\n\nexport const PreferredLocation = (props: Props) => {\n  const { currentLocation } = props.location.state;\n\n  const [locations, setLocations] = useState(['', '', ''] as string[]);\n\n  const onChangeLocation = (input: string, index: number) => {\n    const tmp = locations;\n    tmp[index] = input;\n    setLocations([...tmp]);\n  };\n\n  const multipleCityInput = () => {\n    const inputs = [];\n\n    for (let index = 0; index < 3; index++) {\n      inputs.push(\n        <CityInput\n          key={index}\n          label={(index + 1).toString()}\n          onChange={(newValue) => onChangeLocation(newValue, index)}\n          placeholder='Search for city'\n          value={locations[index]}\n        />,\n      );\n    }\n\n    return inputs;\n  };\n\n  const content = <div className={classes.preferred}>{multipleCityInput()}</div>;\n\n  return (\n    <Page\n      content={content}\n      link={{\n        url: '/advice',\n        text: 'Get advice',\n        state: { preferredLocations: locations, ...props.location.state },\n      }}\n      title={\n        <>\n          {currentLocation}, got it!\n          <br />\n          <br />\n          Which cities are you considering?\n        </>\n      }\n    />\n  );\n};\n","import React from 'react';\n\nimport classes from './Statistic.module.scss';\n\ninterface Props {\n  label: string;\n  value: string;\n}\n\nexport const Statistic = (props: Props) => (\n  <div className={classes.statistic}>\n    <span className={classes.statistic__label}>{props.label}</span>\n    <span className={classes.statistic__value}>{props.value}</span>\n  </div>\n);\n","export const getCheapestFlight = async (\n  from: string,\n  to: string,\n  date: Date,\n): Promise<any> => {\n  const dateFrom = `${date.getUTCDate()}/${date.getUTCMonth()}/${date.getUTCFullYear()}`;\n\n  // We look 3 months into the future when we try to get possible flights\n  const dateTo = `${date.getUTCDate()}/${\n    date.getUTCMonth() + 3\n  }/${date.getUTCFullYear()}`;\n\n  const data = await fetch(\n    `https://api.skypicker.com/flights?flyFrom=${from}&to=${to}&dateFrom=${dateFrom}&dateTo=${dateTo}&partner=picky&v=3`,\n  );\n\n  return data.json();\n};\n","import React, { useEffect, useState } from 'react';\n\nimport classes from './CityInformation.module.scss';\nimport { Statistic } from './Statistic';\n// import { getWeatherLocationID, getCurrentWeather } from '../../../../services/weather';\nimport { getCheapestFlight } from '../../../../services/flights';\n\ninterface Props {\n  city: KiwiLocation;\n  preferred: boolean;\n}\n\nexport const CityInformation = (props: Props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [flightInformation, setFlightInformation] = useState(null as any);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setIsLoading(true);\n      /* const response = await getWeatherLocationID(\n        props.city.name,\n        props.city.country.code,\n      );\n      const weather = await getCurrentWeather(response);*/\n\n      const flights = await getCheapestFlight('AMS', props.city.code, new Date());\n\n      if (flights.data.length > 0) {\n        setFlightInformation(flights.data[0]);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetch();\n  }, [props.city.name, props.city.country.code, props.city.code]);\n\n  return (\n    <div\n      className={`${classes.cityinformation} ${\n        props.preferred ? classes.cityinformation__preferred : ''\n      }`}>\n      <h1>{props.city.name}</h1>\n      <div>\n        <h4>Flight information</h4>\n        {flightInformation ? (\n          <>\n            {flightInformation?.conversion?.EUR ? (\n              <Statistic\n                label='Cost'\n                value={`${flightInformation.conversion.EUR} Euros`}\n              />\n            ) : null}\n            {flightInformation?.fly_duration ? (\n              <Statistic label='Flight duration' value={flightInformation.fly_duration} />\n            ) : null}\n            {flightInformation?.deep_link ? (\n              <a\n                className={classes.cityinformation__flightlink}\n                href={flightInformation.deep_link}\n                rel='noopener noreferrer'\n                target='_blank'>\n                View flight info here\n              </a>\n            ) : null}\n          </>\n        ) : isLoading ? (\n          <span>Loading...</span>\n        ) : (\n          <span>No flight information currently available</span>\n        )}\n\n        <h4>City information</h4>\n        {props.city.population ? (\n          <Statistic label='Population' value={props.city.population.toLocaleString()} />\n        ) : null}\n        {props.city.airports ? (\n          <Statistic label='Airports' value={props.city.airports.toString()} />\n        ) : null}\n        {props.city.bus_stations ? (\n          <Statistic label='Bus stations' value={props.city.bus_stations.toString()} />\n        ) : null}\n        {props.city.stations ? (\n          <Statistic label='Train stations' value={props.city.stations.toString()} />\n        ) : null}\n        {props.city.hotels ? (\n          <Statistic label='Hotels' value={props.city.hotels.toString()} />\n        ) : null}\n        <h4>Current weather</h4>\n        <span>No weather information currently available</span>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Location } from 'history';\n\nimport classes from './Advice.module.scss';\nimport { Page } from '../';\nimport { CityInformation } from './CityInformation';\nimport { getLocationByString } from '../../../services/locations';\n\ninterface Props {\n  location: Location<{\n    name: string;\n    currentLocation: string;\n    preferredLocations: string[];\n  }>;\n}\n\nexport const Advice = (props: Props) => {\n  const [cityInformation, setCityInformation] = useState([] as KiwiLocation[]);\n\n  useEffect(() => {\n    const fetchCityInformation = async () => {\n      const information = props.location.state.preferredLocations.map(async (cityName) =>\n        getLocationByString(cityName),\n      );\n\n      const data = await Promise.all(information);\n      setCityInformation(data.map((location) => location.locations[0]));\n    };\n\n    fetchCityInformation();\n  }, [props.location.state.preferredLocations]);\n\n  const content = (\n    <div className={classes.advice}>\n      {cityInformation.map((city, index) => (\n        <CityInformation\n          city={city}\n          key={city.name}\n          preferred={index === 0 ? true : false}\n        />\n      ))}\n    </div>\n  );\n\n  return (\n    <Page\n      content={content}\n      title={<>Here is your advice {props.location.state.name}</>}\n    />\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { Home } from '../Pages/Home';\nimport { Name } from '../Pages/Name';\nimport { CurrentLocation } from '../Pages/Location/Current';\nimport { PreferredLocation } from '../Pages/Location/Preferred';\nimport { Advice } from '../Pages/Advice';\n\nimport classes from './App.module.scss';\n\nexport const App = () => (\n  <BrowserRouter>\n    <div className={classes.App}>\n      <Switch>\n        <Route component={Advice} path='/advice' />\n        <Route component={PreferredLocation} path='/preferred-location' />\n        <Route component={CurrentLocation} path='/current-location' />\n        <Route component={Name} path='/name' />\n        <Route component={Home} path='/' />\n      </Switch>\n    </div>\n  </BrowserRouter>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__vuH5o\",\"page__header\":\"Page_page__header__gvRTs\",\"page__title\":\"Page_page__title__1ivbK\",\"page__actions\":\"Page_page__actions__3Evl2\",\"page__content\":\"Page_page__content__2_ScZ\",\"page__description\":\"Page_page__description__1lAT4\"};"],"sourceRoot":""}